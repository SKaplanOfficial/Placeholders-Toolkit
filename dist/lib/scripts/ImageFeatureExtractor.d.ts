declare const imageFeatureExtractorScript = "use framework \"Vision\"\nuse scripting additions\n\non trim(theText)\n\tset theString to current application's NSString's stringWithString:theText\n\tset spaces to current application's NSCharacterSet's whitespaceAndNewlineCharacterSet\n\tset trimmedString to theString's stringByTrimmingCharactersInSet:spaces\n\treturn trimmedString as text\nend trim\n\non run (argv)\n\tset imagePath to item 3 of argv\n\tset useSubjectClassification to item 4 of argv is \"true\"\n\tset useBarcodeDetection to item 5 of argv is \"true\"\n\tset useFaceDetection to item 6 of argv is \"true\"\n\tset useRectangleDetection to item 7 of argv is \"true\"\n\tset useSaliencyAnalysis to item 8 of argv is \"true\"\n\tset useHorizonDetection to item 9 of argv is \"true\"\n\tset confidenceThreshold to item 10 of argv as number\n\tset promptText to \"\"\n\tset imageData to current application's NSMutableDictionary's alloc()'s init()\n\n\ttry\n\t\tset theImage to current application's NSImage's alloc()'s initWithContentsOfFile:imagePath\n\n\t\tset requestHandler to current application's VNImageRequestHandler's alloc()'s initWithData:(theImage's TIFFRepresentation()) options:(current application's NSDictionary's alloc()'s init())\n\n\t\tset textRequest to current application's VNRecognizeTextRequest's alloc()'s init()\n\t\tset classificationRequest to current application's VNClassifyImageRequest's alloc()'s init()\n\t\tset barcodeRequest to current application's VNDetectBarcodesRequest's alloc()'s init()\n\t\tset animalRequest to current application's VNRecognizeAnimalsRequest's alloc()'s init()\n\t\tset faceRequest to current application's VNDetectFaceRectanglesRequest's alloc()'s init()\n\t\tset rectRequest to current application's VNDetectRectanglesRequest's alloc()'s init()\n\t\tset saliencyRequest to current application's VNGenerateAttentionBasedSaliencyImageRequest's alloc()'s init()\n\t\tset horizonRequest to current application's VNDetectHorizonRequest's alloc()'s init()\n\t\trectRequest's setMaximumObservations:0\n\n\t\tif theImage's |size|()'s width > 200 and theImage's |size|()'s height > 200 then\n\t\t\trequestHandler's performRequests:{textRequest, classificationRequest, barcodeRequest, animalRequest, faceRequest, rectRequest, saliencyRequest, horizonRequest} |error|:(missing value)\n\t\telse\n\t\t\trequestHandler's performRequests:{textRequest, classificationRequest, barcodeRequest, animalRequest, faceRequest, saliencyRequest, horizonRequest} |error|:(missing value)\n\t\tend if\n\n\t\t-- Extract raw text results\n\t\tset textResults to textRequest's results()\n\t\tset theText to \"\"\n\t\trepeat with observation in textResults\n\t\t\tset theText to theText & ((first item in (observation's topCandidates:1))'s |string|() as text) & \", \"\n\t\tend repeat\n\n\t\tif useSubjectClassification then\n\t\t\t-- Extract subject classifications\n\t\t\tset classificationResults to classificationRequest's results()\n\t\t\tset classifications to {}\n\t\t\trepeat with observation in classificationResults\n\t\t\t\tif observation's confidence() > confidenceThreshold then\n\t\t\t\t\tcopy observation's identifier() as text to end of classifications\n\t\t\t\tend if\n\t\t\tend repeat\n\n\t\t\t-- Extract animal detection results\n\t\t\tset animalResults to animalRequest's results()\n\t\t\tset theAnimals to \"\"\n\t\t\trepeat with observation in animalResults\n\t\t\t\trepeat with label in (observation's labels())\n\t\t\t\t\tset theAnimals to (theAnimals & label's identifier as text) & \", \"\n\t\t\t\tend repeat\n\t\t\tend repeat\n\n\t\t\tif theAnimals is not \"\" then\n\t\t\t\tset theAnimals to text 1 thru -3 of theAnimals\n\t\t\tend if\n\t\tend if\n\n\t\tif useBarcodeDetection then\n\t\t\t-- Extract barcode text results\n\t\t\tset barcodeResults to barcodeRequest's results()\n\t\t\tset barcodeText to \"\"\n\t\t\trepeat with observation in barcodeResults\n\t\t\t\tset barcodeText to barcodeText & (observation's payloadStringValue() as text) & \", \"\n\t\t\tend repeat\n\n\t\t\tif length of barcodeText > 0 then\n\t\t\t\tset barcodeText to text 1 thru ((length of barcodeText) - 2) of barcodeText\n\t\t\tend if\n\t\tend if\n\n\t\tif useFaceDetection then\n\t\t\t-- Extract number of faces detected\n\t\t\tset faceResults to faceRequest's results()\n\t\t\tset numFaces to count of faceResults\n\t\tend if\n\n\t\tif useRectangleDetection then\n\t\t\t-- Extract rectangle coordinates\n\t\t\tif theImage's |size|()'s width > 200 and theImage's |size|()'s height > 200 then\n\t\t\t\tset rectResults to rectRequest's results()\n\t\t\t\tset imgWidth to theImage's |size|()'s width\n\t\t\t\tset imgHeight to theImage's |size|()'s height\n\t\t\t\tset rectResult to {}\n\t\t\t\trepeat with observation in rectResults\n\t\t\t\t\tset midX to ((observation's bottomLeft()'s x) + (observation's bottomRight()'s x)) / 2 * imgWidth\n\t\t\t\t\tset midY to ((observation's bottomLeft()'s y) + (observation's topLeft()'s y)) / 2 * imgHeight\n\t\t\t\t\tset rectWidth to (observation's bottomRight()'s x) * imgWidth - (observation's bottomLeft()'s x) * imgWidth\n\t\t\t\t\tset rectHeight to (observation's topRight()'s y) * imgHeight - (observation's bottomRight()'s y) * imgHeight\n\n\t\t\t\t\tset midPointText to \"Midpoint=(\" & midX & \",\" & midY & \")\"\n\t\t\t\t\tset dimensionsText to \"Dimensions=\" & rectWidth & \"x\" & rectHeight\n\t\t\t\t\tcopy midPointText & \" \" & dimensionsText to end of rectResult\n\t\t\t\tend repeat\n\t\t\tend if\n\t\tend if\n\n\t\tif useSaliencyAnalysis then\n\t\t\t-- Identify areas most likely to draw attention\n\t\t\tset pointsOfInterest to \"\"\n\t\t\tset saliencyResults to saliencyRequest's results()\n\t\t\trepeat with observation in saliencyResults\n\t\t\t\tset salientObjects to observation's salientObjects()\n\t\t\t\trepeat with salientObject in salientObjects\n\t\t\t\t\tset bl to salientObject's bottomLeft()\n\t\t\t\t\tset br to salientObject's bottomRight()\n\t\t\t\t\tset tl to salientObject's topLeft()\n\t\t\t\t\tset tr to salientObject's topRight()\n\n\t\t\t\t\tset midX to ((bl's x) + (br's x)) / 2\n\t\t\t\t\tset midY to ((bl's y) + (tl's y)) / 2\n\t\t\t\t\tset pointsOfInterest to (pointsOfInterest & (\" (\" & midX as text) & \",\" & midY as text) & \")\"\n\t\t\t\tend repeat\n\t\t\tend repeat\n\t\tend if\n\n\t\tif theText is not \"\" then\n\t\t\timageData's setValue:theText forKey:\"imageText\"\n\t\t\tset promptText to \"<Transcribed text of the image: \"\" & theText & \"\".>\"\n\t\tend if\n\n\t\tif useSaliencyAnalysis then\n\t\t\tif pointsOfInterest is not \"\" then\n\t\t\t\timageData's setValue:pointsOfInterest forKey:\"imagePOI\"\n\t\t\t\tset promptText to promptText & \"<Areas most likely to draw attention: \" & pointsOfInterest & \">\"\n\t\t\tend if\n\t\tend if\n\n\t\tif useSubjectClassification then\n\t\t\tif length of classifications > 0 then\n\t\t\t\timageData's setValue:classifications forKey:\"imageSubjects\"\n\t\t\t\tset promptText to promptText & \"<Possible subject labels: \" & classifications & \">\"\n\t\t\tend if\n\n\t\t\tif theAnimals is not \"\" then\n\t\t\t\timageData's setValue:theAnimals forKey:\"imageAnimals\"\n\t\t\t\tset promptText to promptText & \"<Animals represented: \" & theAnimals & \">\"\n\t\t\tend if\n\t\tend if\n\n\t\tif useBarcodeDetection then\n\t\t\tif barcodeText is not \"\" then\n\t\t\t\timageData's setValue:barcodeText forKey:\"imageBarcodes\"\n\t\t\t\tset promptText to promptText & \"<Barcode or QR code payloads: \" & barcodeText & \">\"\n\t\t\tend if\n\t\tend if\n\n\t\tif useRectangleDetection then\n\t\t\tif theImage's |size|()'s width > 200 and theImage's |size|()'s height > 200 then\n\t\t\t\tset rectText to \"\"\n\t\t\t\tif (count of rectResult) > 0 then\n\t\t\t\t\tset promptText to promptText & \"<Boundaries of rectangles: ###\"\n\t\t\t\t\tset theIndex to 1\n\t\t\t\t\trepeat with rectCoords in rectResult\n\t\t\t\t\t\tset rect to \"\tRectangle #\" & theIndex & \": \" & rectCoords & \"\n        \"\n\t\t\t\t\t\tset rectText to rectText & \"\n\" & trim(rect)\n\t\t\t\t\t\tset promptText to promptText & rect\n\t\t\t\t\t\tset theIndex to theIndex + 1\n\t\t\t\t\tend repeat\n\t\t\t\t\tset promptText to promptText & \"###>\"\n\t\t\t\tend if\n\t\t\t\timageData's setValue:rectText forKey:\"imageRectangles\"\n\t\t\tend if\n\t\tend if\n\n\t\tif useFaceDetection then\n\t\t\tif numFaces > 0 then\n\t\t\t\timageData's setValue:numFaces forKey:\"imageFaces\"\n\t\t\t\tset promptText to promptText & \"<Number of faces: \" & numFaces & \">\"\n\t\t\tend if\n\t\tend if\n\n\t\tif useHorizonDetection then\n\t\t\tset horizonAngle to missing value\n\t\t\tset horizonResults to horizonRequest's results()\n\t\t\tif horizonResults's |count|() > 0 then\n\t\t\t\tset horizonAngle to (horizonResults's firstObject()'s angle()) * 180 / pi\n\t\t\tend if\n\n\t\t\tif horizonAngle is not missing value then\n\t\t\t\tset theScript to \"\" & horizonAngle & \".toFixed(2)\"\n\t\t\t\tset theAngle to run script theScript in \"JavaScript\"\n\t\t\t\timageData's setValue:((theAngle as text) & \" degrees\") forKey:\"imageHorizon\"\n\t\t\t\tset promptText to promptText & \"<Angle of the horizon: \" & theAngle & \" degrees>\"\n\t\t\tend if\n\t\tend if\n\ton error err\n\t\treturn err\n\tend try\n\n\timageData's setValue:promptText forKey:\"stringValue\"\n\n\tset jsonObj to current application's NSJSONSerialization's dataWithJSONObject:imageData options:(current application's NSJSONWritingFragmentsAllowed) |error|:(missing value)\n\tset jsonString to current application's NSString's alloc()'s initWithData:jsonObj encoding:(current application's NSUTF8StringEncoding)\n\treturn jsonString as text\nend run";
